---
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const kresba = t("work.drawing.items");
const malba = t("work.painting.items");

const imagesKresba = import.meta.glob<{ default: ImageMetadata }>('/src/assets/tvorba/kresba/*');
const imagesMalba = import.meta.glob<{ default: ImageMetadata }>('/src/assets/tvorba/malba/*');

// (kresba).map((item) => {
//     if (!imagesKresba[item.image]) throw new Error(`"${item.image}" does not exist in glob: '/src/assets/novinky/*'`);
// })

---

<style>

</style>
<section id="tvorba" class="px-4 pt-20 md:flex gap-18">
  <div class="kresba flex-1 md:pr-40 pb-8">
    <h2 class="text-gray-500 text-xl font-medium mb-2">
      {t("work.drawing.title")}
    </h2>
    <div class="items w-full">
      <div class="item overflow-hidden" id="kresba">
        <Image
          src={imagesKresba[kresba[0].image]()}
          alt={kresba[0].title}
          class="w-full object-contain h-[500px] md:h-[600px] modal-src rounded-md"
        />

        {kresba.map((item) => {
          return (
            <div class="hidden">
              <Image
                src={imagesKresba[item.image]()}
                alt={item.title}
                class="w-full object-contain h-[500px] md:h-[600px] modal-src rounded-md"
              />
            </div>
          );
        })
        } 
        <h3 class="text-gray-500 font-medium mt-2">{kresba[0].title}</h3>

        <div class="flex justify-between items-center">
          <p class="text-gray-500 text-sm" id="kresba-description">
            {kresba[0].description} | {kresba[0].date}
          </p>
          <button
            class="text-gray-500 text-sm hover-underline-animation"
            id="next-kresba"
          >
            {t("utils.next")}
          </button>
        </div>
      </div>
    </div>
  </div>
  <div class="malba flex-1 md:pr-40">
    <h2 class="text-gray-500 text-xl font-medium mb-2">
      {t("work.painting.title")}
    </h2>
    <div class="items w-full">
      <div class="item overflow-y-hidden" id="malba">
        <Image
          src={imagesMalba[malba[0].image]()}
          alt={malba[0].title}
          class="w-full object-contain modal-src rounded-md h-[500px] md:h-[600px]"
        />
        {malba.map((item) => {
          return (
            <div class="hidden">
              <Image
                src={imagesMalba[item.image]()}
                alt={item.title}
                class="w-full object-contain h-[500px] md:h-[600px] modal-src rounded-md"
              />
            </div>
          );
        })
        }
        <h3 class="text-gray-500 font-medium mt-2">{malba[0].title}</h3>

        <div class="flex justify-between items-center">
          <p class="text-gray-500 text-sm" id="malba-description">
            {malba[0].description} | {malba[0].date}
          </p>
          <button
            class="text-gray-500 text-sm hover-underline-animation"
            id="next-malba"
          >
            {t("utils.next")}
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<script
  define:vars={{
    malba: t("work.painting.items"),
    kresba: t("work.drawing.items"),
  }}
>
  // function getImageUrl(name) {
  //   return new URL(`../assets/images/${name}`, import.meta.url).href;
  // }

  var kresba_active_index = 0;
  var malba_active_index = 0;

  function switchImage(id, data) {
    let con = document.getElementById(id);
    con.classList.toggle("fade-out");
    setTimeout(() => {
      con.children[0].src = data.image;
      con.children[1].innerText = data.title;
      con.classList.toggle("fade-out");
    }, 500);
    document.getElementById(id + "-description").innerText =
      data.description + " | " + data.date;
  }

  function increaseKresbaActiveIndex() {
    kresba_active_index++;
    if (kresba_active_index >= kresba.length) {
      kresba_active_index = 0;
    }
    switchImage("kresba", kresba[kresba_active_index]);
  }

  function increaseMalbaActiveIndex() {
    malba_active_index++;
    if (malba_active_index >= malba.length) {
      malba_active_index = 0;
    }
    switchImage("malba", malba[malba_active_index]);
  }

  document.getElementById("next-kresba").onclick = () =>
    increaseKresbaActiveIndex();
  document.getElementById("next-malba").onclick = () =>
    increaseMalbaActiveIndex();

  var imgs = document.querySelectorAll(".modal-src");

  for (let i = 0; i < imgs.length; i++) {
    imgs[i].onclick = (img) => {
      showModal(img.target.src, img.target.alt);
    };
  }

  function preloadImage(url) {
    var img = new Image();
    img.src = url;
  }

  // function preloadAllImages() {
  //   for (let i = 0; i < kresba.length; i++) {
  //     preloadImage("/assets/" + kresba[i].image);
  //   }
  //   for (let i = 0; i < malba.length; i++) {
  //     preloadImage("/assets/" + malba[i].image);
  //   }
  // }
  // preloadAllImages;
</script>

<style>
  .item.fade-out > .modal-src {
    transform: translateY(-100%);
  }

  .item > .modal-src {
    transform: translateY(0);
    transition: transform 0.5s;
  }

  .item > h3 {
    opacity: 1;
    transition: opacity 0.5s;
  }

  .item.fade-out > h3 {
    opacity: 0;
  }

  .item > div {
    opacity: 1;
    transition: opacity 0.5s;
  }

  .item.fade-out > div {
    opacity: 0;
  }
</style>
