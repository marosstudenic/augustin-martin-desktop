---
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const samostatne_vystavy = t("exhibitions.solo");
const spolocne_vystavy = t("exhibitions.group");
---

<style lang="scss">
  .accordion {
    overflow: hidden;

    &__intro {
      position: relative;
      cursor: pointer;
    }

    &__content {
      max-height: 0;
      overflow: hidden;
      will-change: max-height;
      transition: all 0.25s ease-out;
      opacity: 0;
    }

    &__active {
      .accordion__intro {
      }

      .accordion__content {
        opacity: 1;
      }
    }
  }
</style>
<section id="vystavy" class="px-4 pt-20">
  <div class="grid grid-cols-1 md:grid-cols-2">
    <div class="accordion accordion-flush">
      <div class="flex justify-between">
        <h2 class="text-gray-500 font-medium text-xl mt-4">
          {t("exhibitions.solo.title")}
        </h2>
        <div class="flex justify-end flex-col">
          <h3
            class="text-gray-500 text-sm align-bottom"
            data-bs-toggle="collapse"
            data-bs-target="#hidden-samostatne"
            aria-expanded="false"
            aria-controls="show-samostatne"
          >
            <!-- {{ accordeon_text_samostatne }} -->
          </h3>
        </div>
      </div>
      <!--    first 4 elements-->
      {
        samostatne_vystavy.slice(0, 5).map((item) => (
          <div class="item my-2">
            <h3 class="text-gray-500 font-medium">{item.date}</h3>
            {item.locations.map((location) => (
              <p class="text-gray-500 text-sm py-2" set:html={location} />
            ))}
          </div>
        ))
      }

      <div class="accordion__content">
        {
          samostatne_vystavy.slice(5).map((item) => (
            <div class="item my-2">
              <h3 class="text-gray-500 font-medium">{item.date}</h3>
              {item.locations.map((location) => (
                <p class="text-gray-500 text-sm py-2" set:html={location} />
              ))}
            </div>
          ))
        }
      </div>

      <div class="flex gap-16 accordion__intro mb-4">
        <p class="flex-1 text-gray-500 cursor-pointer rozbalit font-bold">
          {t("utils.expand")}
        </p>
      </div>
    </div>

    <div class="accordion accordion-flush">
      <div class="flex justify-between">
        <h2 class="text-gray-500 font-medium text-xl mt-4">
          {t("exhibitions.group.title")}
        </h2>
        <div class="flex justify-end flex-col">
          <h3
            class="text-gray-500 text-sm align-bottom"
            data-bs-toggle="collapse"
            data-bs-target="#hidden-samostatne"
            aria-expanded="false"
            aria-controls="show-samostatne"
          >
            <!-- {{ accordeon_text_samostatne }} -->
          </h3>
        </div>
      </div>
      <!--    first 4 elements-->
      {
        spolocne_vystavy.slice(0, 5).map((item) => (
          <div class="item my-2">
            <h3 class="text-gray-500 font-medium">{item.date}</h3>
            {item.locations.map((location) => (
              <p class="text-gray-500 text-sm py-2" set:html={location} />
            ))}
          </div>
        ))
      }

      <div class="accordion__content">
        {
          spolocne_vystavy.slice(5).map((item) => (
            <div class="item my-2">
              <h3 class="text-gray-500 font-medium">{item.date}</h3>
              {item.locations.map((location) => (
                <p class="text-gray-500 text-sm py-2" set:html={location} />
              ))}
            </div>
          ))
        }
      </div>

      <div class="flex gap-16 accordion__intro mb-4">
        <p class="flex-1 text-gray-500 cursor-pointer rozbalit font-bold">
          {t("utils.expand")}
        </p>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ rozbalit: t("utils.expand"), hide: t("utils.hide") }}>
  const accordions = document.querySelectorAll(".accordion");

  const openAccordion = (accordion) => {
    const content = accordion.querySelectorAll(".accordion__content");
    accordion.classList.add("accordion__active");
    content[0].style.maxHeight = content[0].scrollHeight + "px";
    // content[1].style.maxHeight = content[1].scrollHeight + "px";
    accordion
      .querySelectorAll(".rozbalit")
      .forEach((item) => (item.innerText = hide));
  };

  const closeAccordion = (accordion) => {
    const content = accordion.querySelectorAll(".accordion__content");
    accordion.classList.remove("accordion__active");
    content[0].style.maxHeight = null;
    // content[1].style.maxHeight = null;
    accordion
      .querySelectorAll(".rozbalit")
      .forEach((item) => (item.innerText = expand));
  };

  accordions.forEach((accordion) => {
    const intro = accordion.querySelector(".accordion__intro");
    const content = accordion.querySelector(".accordion__content");
    //realne su dva ale nam staci len jeden, pretoze sa bud oba otvoria alebo zatvoria
    intro.onclick = () => {
      if (content.style.maxHeight) {
        closeAccordion(accordion);
      } else {
        openAccordion(accordion);
      }
    };
  });
</script>
